{"ast":null,"code":"import axios from \"axios\";\nclass UserService {\n  static async login(email, password) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {\n        email,\n        password\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async register(userData) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/register`, {\n        userData\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getAllUsers(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-users`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getYourProfile(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getUserById(userId, token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async deleteUser(userId, token) {\n    try {\n      const response = await axios.delete(`${UserService.BASE_URL}/admin/delete/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async updateUser(userId, userData, token) {\n    try {\n      const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**AUTHENTICATION CHECKER */\n  static logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  }\n  static isAuthenticated() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem('role');\n    return role === 'ADMIN';\n  }\n  static isUser() {\n    const role = localStorage.getItem('role');\n    return role === 'USER';\n  }\n  static adminOnly() {\n    return this.isAuthenticated() && this.isAdmin();\n  }\n}\nUserService.BASE_URL = \"http://localhost:8081\";\nexport default UserService;","map":{"version":3,"names":["axios","UserService","login","email","password","response","post","BASE_URL","data","err","register","userData","getAllUsers","token","get","headers","Authorization","getYourProfile","getUserById","userId","deleteUser","delete","updateUser","put","logout","localStorage","removeItem","isAuthenticated","getItem","isAdmin","role","isUser","adminOnly"],"sources":["C:/Users/kamal/IdeaProjects/users-management-system/spring-boot + react/frontend/src/components/service/UserService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nclass UserService{\r\n    static BASE_URL = \"http://localhost:8081\"\r\n\r\n    static async login(email, password){\r\n        try{\r\n            const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {email, password})\r\n            return response.data;\r\n\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async register(userData){\r\n        try{\r\n            const response = await axios.post(`${UserService.BASE_URL}/auth/register`, {userData})\r\n            return response.data;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async getAllUsers(token){\r\n        try{\r\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-users`, \r\n            {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            })\r\n            return response.data;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n\r\n    static async getYourProfile(token){\r\n        try{\r\n            const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, \r\n            {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            })\r\n            return response.data;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async getUserById(userId, token){\r\n        try{\r\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-users/${userId}`, \r\n            {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            })\r\n            return response.data;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async deleteUser(userId, token){\r\n        try{\r\n            const response = await axios.delete(`${UserService.BASE_URL}/admin/delete/${userId}`, \r\n            {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            })\r\n            return response.data;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n\r\n    static async updateUser(userId, userData, token){\r\n        try{\r\n            const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData,\r\n            {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            })\r\n            return response.data;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**AUTHENTICATION CHECKER */\r\n    static logout(){\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('role')\r\n    }\r\n\r\n    static isAuthenticated(){\r\n        const token = localStorage.getItem('token')\r\n        return !!token\r\n    }\r\n\r\n    static isAdmin(){\r\n        const role = localStorage.getItem('role')\r\n        return role === 'ADMIN'\r\n    }\r\n\r\n    static isUser(){\r\n        const role = localStorage.getItem('role')\r\n        return role === 'USER'\r\n    }\r\n\r\n    static adminOnly(){\r\n        return this.isAuthenticated() && this.isAdmin();\r\n    }\r\n\r\n}\r\n\r\nexport default UserService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}